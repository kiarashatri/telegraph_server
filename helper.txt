jwtObject (signed to: socket.data.user) = {
  user_id: string,
}

Verify variable in middleware (authentication.ts ) = socket.data.verify: boolean


Document DB Structure:

  users [
    {id: unique_id,
     name: string,
     family: string,
     username: string,
     email: string,
     phone: number,
     last_seen: time,
     register_time: time,
     email_confirmation: time,
     friends: [{id: user_id, time_add: time}],
     block: [{id: user_id, time_block: time}], 
     setting: {} }
  ]

  messages [
    {id: unique_id, from: user_id, to: user_id, reply_to: message_id|Null, context: { image?: img, text?: string}, sent_at: time, time_deliver: time|Null }
  ]

  tweets [
    {id: unique_id, owner: number, like: [user_id], comments: [{id: unique_id, owner: user_id, context: string, reply_to: tweet_comment_id|Null, time_sent: time}], context: string, time_sent: time }
  ]

  storys [
    {id: unique_id, owner: id, image: link, add_time: time }
  ]


      { from: "id_from_id", to: "id_to_id", reply_to: "id_msg_id", context: { image: "img", text: "string txt"}, sent_at: null, time_deliver: null }


    id: 62f77cecb1b2d0ff05c01b2b
      db.messages.insertOne({ from: "id_from_id", to: "62f77b25b1b2d0ff05c01a2b", reply_to: "id_msg_id", context: { image: "img", text: "string txt"}, sent_at: null, time_deliver: null })